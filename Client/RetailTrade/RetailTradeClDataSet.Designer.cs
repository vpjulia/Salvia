//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace RetailTradeClient {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("RetailTradeClDataSet")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class RetailTradeClDataSet : System.Data.DataSet {
        
        private ProductRemainsByDateDataTable tableProductRemainsByDate;
        
        private ProductSelectByIdDataTable tableProductSelectById;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public RetailTradeClDataSet() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected RetailTradeClDataSet(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["ProductRemainsByDate"] != null)) {
                    base.Tables.Add(new ProductRemainsByDateDataTable(ds.Tables["ProductRemainsByDate"]));
                }
                if ((ds.Tables["ProductSelectById"] != null)) {
                    base.Tables.Add(new ProductSelectByIdDataTable(ds.Tables["ProductSelectById"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProductRemainsByDateDataTable ProductRemainsByDate {
            get {
                return this.tableProductRemainsByDate;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public ProductSelectByIdDataTable ProductSelectById {
            get {
                return this.tableProductSelectById;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            RetailTradeClDataSet cln = ((RetailTradeClDataSet)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["ProductRemainsByDate"] != null)) {
                    base.Tables.Add(new ProductRemainsByDateDataTable(ds.Tables["ProductRemainsByDate"]));
                }
                if ((ds.Tables["ProductSelectById"] != null)) {
                    base.Tables.Add(new ProductSelectByIdDataTable(ds.Tables["ProductSelectById"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableProductRemainsByDate = ((ProductRemainsByDateDataTable)(base.Tables["ProductRemainsByDate"]));
            if ((initTable == true)) {
                if ((this.tableProductRemainsByDate != null)) {
                    this.tableProductRemainsByDate.InitVars();
                }
            }
            this.tableProductSelectById = ((ProductSelectByIdDataTable)(base.Tables["ProductSelectById"]));
            if ((initTable == true)) {
                if ((this.tableProductSelectById != null)) {
                    this.tableProductSelectById.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "RetailTradeClDataSet";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/RetailTradeClDataSet.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableProductRemainsByDate = new ProductRemainsByDateDataTable();
            base.Tables.Add(this.tableProductRemainsByDate);
            this.tableProductSelectById = new ProductSelectByIdDataTable();
            base.Tables.Add(this.tableProductSelectById);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeProductRemainsByDate() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeProductSelectById() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            RetailTradeClDataSet ds = new RetailTradeClDataSet();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void ProductRemainsByDateRowChangeEventHandler(object sender, ProductRemainsByDateRowChangeEvent e);
        
        public delegate void ProductSelectByIdRowChangeEventHandler(object sender, ProductSelectByIdRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProductRemainsByDateDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnSeries;
            
            private System.Data.DataColumn columnUseByDate;
            
            private System.Data.DataColumn columnID;
            
            private System.Data.DataColumn columnStartRem;
            
            private System.Data.DataColumn columnDocDate;
            
            private System.Data.DataColumn columnNum;
            
            private System.Data.DataColumn columnNumCheck;
            
            private System.Data.DataColumn columnManufacturerName;
            
            private System.Data.DataColumn columnQuantityReceipt;
            
            private System.Data.DataColumn columnQuantityInvoice;
            
            private System.Data.DataColumn columnEndRem;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductRemainsByDateDataTable() {
                this.TableName = "ProductRemainsByDate";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProductRemainsByDateDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ProductRemainsByDateDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SeriesColumn {
                get {
                    return this.columnSeries;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UseByDateColumn {
                get {
                    return this.columnUseByDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StartRemColumn {
                get {
                    return this.columnStartRem;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DocDateColumn {
                get {
                    return this.columnDocDate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NumColumn {
                get {
                    return this.columnNum;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NumCheckColumn {
                get {
                    return this.columnNumCheck;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ManufacturerNameColumn {
                get {
                    return this.columnManufacturerName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn QuantityReceiptColumn {
                get {
                    return this.columnQuantityReceipt;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn QuantityInvoiceColumn {
                get {
                    return this.columnQuantityInvoice;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn EndRemColumn {
                get {
                    return this.columnEndRem;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductRemainsByDateRow this[int index] {
                get {
                    return ((ProductRemainsByDateRow)(this.Rows[index]));
                }
            }
            
            public event ProductRemainsByDateRowChangeEventHandler ProductRemainsByDateRowChanging;
            
            public event ProductRemainsByDateRowChangeEventHandler ProductRemainsByDateRowChanged;
            
            public event ProductRemainsByDateRowChangeEventHandler ProductRemainsByDateRowDeleting;
            
            public event ProductRemainsByDateRowChangeEventHandler ProductRemainsByDateRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddProductRemainsByDateRow(ProductRemainsByDateRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductRemainsByDateRow AddProductRemainsByDateRow(string Series, System.DateTime UseByDate, int ID, decimal StartRem, System.DateTime DocDate, int Num, int NumCheck, string ManufacturerName, decimal QuantityReceipt, decimal QuantityInvoice, decimal EndRem) {
                ProductRemainsByDateRow rowProductRemainsByDateRow = ((ProductRemainsByDateRow)(this.NewRow()));
                rowProductRemainsByDateRow.ItemArray = new object[] {
                        Series,
                        UseByDate,
                        ID,
                        StartRem,
                        DocDate,
                        Num,
                        NumCheck,
                        ManufacturerName,
                        QuantityReceipt,
                        QuantityInvoice,
                        EndRem};
                this.Rows.Add(rowProductRemainsByDateRow);
                return rowProductRemainsByDateRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                ProductRemainsByDateDataTable cln = ((ProductRemainsByDateDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new ProductRemainsByDateDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnSeries = base.Columns["Series"];
                this.columnUseByDate = base.Columns["UseByDate"];
                this.columnID = base.Columns["ID"];
                this.columnStartRem = base.Columns["StartRem"];
                this.columnDocDate = base.Columns["DocDate"];
                this.columnNum = base.Columns["Num"];
                this.columnNumCheck = base.Columns["NumCheck"];
                this.columnManufacturerName = base.Columns["ManufacturerName"];
                this.columnQuantityReceipt = base.Columns["QuantityReceipt"];
                this.columnQuantityInvoice = base.Columns["QuantityInvoice"];
                this.columnEndRem = base.Columns["EndRem"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnSeries = new System.Data.DataColumn("Series", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSeries);
                this.columnUseByDate = new System.Data.DataColumn("UseByDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUseByDate);
                this.columnID = new System.Data.DataColumn("ID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnStartRem = new System.Data.DataColumn("StartRem", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStartRem);
                this.columnDocDate = new System.Data.DataColumn("DocDate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDocDate);
                this.columnNum = new System.Data.DataColumn("Num", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNum);
                this.columnNumCheck = new System.Data.DataColumn("NumCheck", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNumCheck);
                this.columnManufacturerName = new System.Data.DataColumn("ManufacturerName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnManufacturerName);
                this.columnQuantityReceipt = new System.Data.DataColumn("QuantityReceipt", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantityReceipt);
                this.columnQuantityInvoice = new System.Data.DataColumn("QuantityInvoice", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnQuantityInvoice);
                this.columnEndRem = new System.Data.DataColumn("EndRem", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnEndRem);
                this.columnSeries.ReadOnly = true;
                this.columnSeries.MaxLength = 15;
                this.columnUseByDate.ReadOnly = true;
                this.columnID.ReadOnly = true;
                this.columnStartRem.ReadOnly = true;
                this.columnDocDate.ReadOnly = true;
                this.columnNum.ReadOnly = true;
                this.columnNumCheck.ReadOnly = true;
                this.columnManufacturerName.ReadOnly = true;
                this.columnManufacturerName.MaxLength = 50;
                this.columnQuantityReceipt.ReadOnly = true;
                this.columnQuantityInvoice.ReadOnly = true;
                this.columnEndRem.ReadOnly = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductRemainsByDateRow NewProductRemainsByDateRow() {
                return ((ProductRemainsByDateRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new ProductRemainsByDateRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(ProductRemainsByDateRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProductRemainsByDateRowChanged != null)) {
                    this.ProductRemainsByDateRowChanged(this, new ProductRemainsByDateRowChangeEvent(((ProductRemainsByDateRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProductRemainsByDateRowChanging != null)) {
                    this.ProductRemainsByDateRowChanging(this, new ProductRemainsByDateRowChangeEvent(((ProductRemainsByDateRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProductRemainsByDateRowDeleted != null)) {
                    this.ProductRemainsByDateRowDeleted(this, new ProductRemainsByDateRowChangeEvent(((ProductRemainsByDateRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProductRemainsByDateRowDeleting != null)) {
                    this.ProductRemainsByDateRowDeleting(this, new ProductRemainsByDateRowChangeEvent(((ProductRemainsByDateRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveProductRemainsByDateRow(ProductRemainsByDateRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                RetailTradeClDataSet ds = new RetailTradeClDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProductRemainsByDateDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class ProductSelectByIdDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnID;
            
            private System.Data.DataColumn columnName;
            
            private System.Data.DataColumn columnSmallName;
            
            private System.Data.DataColumn columnPriceManufact;
            
            private System.Data.DataColumn columnUnitRef;
            
            private System.Data.DataColumn columnPackingRef;
            
            private System.Data.DataColumn columnStorageConditionRef;
            
            private System.Data.DataColumn columnSubstanceRef;
            
            private System.Data.DataColumn columnFarmGrouplevel2Ref;
            
            private System.Data.DataColumn columnIsRecept;
            
            private System.Data.DataColumn columnIsOneRecept;
            
            private System.Data.DataColumn columnIsHide;
            
            private System.Data.DataColumn columnMinDivisor;
            
            private System.Data.DataColumn columnIsNDS;
            
            private System.Data.DataColumn columnAuthorCreate;
            
            private System.Data.DataColumn columnAuthorLastModif;
            
            private System.Data.DataColumn columnDateCreate;
            
            private System.Data.DataColumn columnRowVersion;
            
            private System.Data.DataColumn columnFarmGroupName;
            
            private System.Data.DataColumn columnPackingName;
            
            private System.Data.DataColumn columnStorageConditionName;
            
            private System.Data.DataColumn columnFarmGroupLevel2;
            
            private System.Data.DataColumn columnUnitName;
            
            private System.Data.DataColumn columnSubstanceName;
            
            private System.Data.DataColumn columnDateLastModif;
            
            private System.Data.DataColumn columnNote;
            
            private System.Data.DataColumn columnOldName;
            
            private System.Data.DataColumn columnOldKod;
            
            private System.Data.DataColumn columnOldKol;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductSelectByIdDataTable() {
                this.TableName = "ProductSelectById";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProductSelectByIdDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected ProductSelectByIdDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NameColumn {
                get {
                    return this.columnName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SmallNameColumn {
                get {
                    return this.columnSmallName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PriceManufactColumn {
                get {
                    return this.columnPriceManufact;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UnitRefColumn {
                get {
                    return this.columnUnitRef;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PackingRefColumn {
                get {
                    return this.columnPackingRef;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StorageConditionRefColumn {
                get {
                    return this.columnStorageConditionRef;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SubstanceRefColumn {
                get {
                    return this.columnSubstanceRef;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FarmGrouplevel2RefColumn {
                get {
                    return this.columnFarmGrouplevel2Ref;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IsReceptColumn {
                get {
                    return this.columnIsRecept;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IsOneReceptColumn {
                get {
                    return this.columnIsOneRecept;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IsHideColumn {
                get {
                    return this.columnIsHide;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MinDivisorColumn {
                get {
                    return this.columnMinDivisor;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IsNDSColumn {
                get {
                    return this.columnIsNDS;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AuthorCreateColumn {
                get {
                    return this.columnAuthorCreate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn AuthorLastModifColumn {
                get {
                    return this.columnAuthorLastModif;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateCreateColumn {
                get {
                    return this.columnDateCreate;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn RowVersionColumn {
                get {
                    return this.columnRowVersion;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FarmGroupNameColumn {
                get {
                    return this.columnFarmGroupName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PackingNameColumn {
                get {
                    return this.columnPackingName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn StorageConditionNameColumn {
                get {
                    return this.columnStorageConditionName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn FarmGroupLevel2Column {
                get {
                    return this.columnFarmGroupLevel2;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn UnitNameColumn {
                get {
                    return this.columnUnitName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn SubstanceNameColumn {
                get {
                    return this.columnSubstanceName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DateLastModifColumn {
                get {
                    return this.columnDateLastModif;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn NoteColumn {
                get {
                    return this.columnNote;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OldNameColumn {
                get {
                    return this.columnOldName;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OldKodColumn {
                get {
                    return this.columnOldKod;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn OldKolColumn {
                get {
                    return this.columnOldKol;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductSelectByIdRow this[int index] {
                get {
                    return ((ProductSelectByIdRow)(this.Rows[index]));
                }
            }
            
            public event ProductSelectByIdRowChangeEventHandler ProductSelectByIdRowChanging;
            
            public event ProductSelectByIdRowChangeEventHandler ProductSelectByIdRowChanged;
            
            public event ProductSelectByIdRowChangeEventHandler ProductSelectByIdRowDeleting;
            
            public event ProductSelectByIdRowChangeEventHandler ProductSelectByIdRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddProductSelectByIdRow(ProductSelectByIdRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductSelectByIdRow AddProductSelectByIdRow(
                        int ID, 
                        string Name, 
                        string SmallName, 
                        decimal PriceManufact, 
                        int UnitRef, 
                        int PackingRef, 
                        int StorageConditionRef, 
                        int SubstanceRef, 
                        int FarmGrouplevel2Ref, 
                        bool IsRecept, 
                        bool IsOneRecept, 
                        bool IsHide, 
                        short MinDivisor, 
                        bool IsNDS, 
                        string AuthorCreate, 
                        string AuthorLastModif, 
                        System.DateTime DateCreate, 
                        byte[] RowVersion, 
                        string FarmGroupName, 
                        string PackingName, 
                        string StorageConditionName, 
                        string FarmGroupLevel2, 
                        string UnitName, 
                        string SubstanceName, 
                        System.DateTime DateLastModif, 
                        string Note, 
                        string OldName, 
                        int OldKod, 
                        int OldKol) {
                ProductSelectByIdRow rowProductSelectByIdRow = ((ProductSelectByIdRow)(this.NewRow()));
                rowProductSelectByIdRow.ItemArray = new object[] {
                        ID,
                        Name,
                        SmallName,
                        PriceManufact,
                        UnitRef,
                        PackingRef,
                        StorageConditionRef,
                        SubstanceRef,
                        FarmGrouplevel2Ref,
                        IsRecept,
                        IsOneRecept,
                        IsHide,
                        MinDivisor,
                        IsNDS,
                        AuthorCreate,
                        AuthorLastModif,
                        DateCreate,
                        RowVersion,
                        FarmGroupName,
                        PackingName,
                        StorageConditionName,
                        FarmGroupLevel2,
                        UnitName,
                        SubstanceName,
                        DateLastModif,
                        Note,
                        OldName,
                        OldKod,
                        OldKol};
                this.Rows.Add(rowProductSelectByIdRow);
                return rowProductSelectByIdRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductSelectByIdRow FindByID(int ID) {
                return ((ProductSelectByIdRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                ProductSelectByIdDataTable cln = ((ProductSelectByIdDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new ProductSelectByIdDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnName = base.Columns["Name"];
                this.columnSmallName = base.Columns["SmallName"];
                this.columnPriceManufact = base.Columns["PriceManufact"];
                this.columnUnitRef = base.Columns["UnitRef"];
                this.columnPackingRef = base.Columns["PackingRef"];
                this.columnStorageConditionRef = base.Columns["StorageConditionRef"];
                this.columnSubstanceRef = base.Columns["SubstanceRef"];
                this.columnFarmGrouplevel2Ref = base.Columns["FarmGrouplevel2Ref"];
                this.columnIsRecept = base.Columns["IsRecept"];
                this.columnIsOneRecept = base.Columns["IsOneRecept"];
                this.columnIsHide = base.Columns["IsHide"];
                this.columnMinDivisor = base.Columns["MinDivisor"];
                this.columnIsNDS = base.Columns["IsNDS"];
                this.columnAuthorCreate = base.Columns["AuthorCreate"];
                this.columnAuthorLastModif = base.Columns["AuthorLastModif"];
                this.columnDateCreate = base.Columns["DateCreate"];
                this.columnRowVersion = base.Columns["RowVersion"];
                this.columnFarmGroupName = base.Columns["FarmGroupName"];
                this.columnPackingName = base.Columns["PackingName"];
                this.columnStorageConditionName = base.Columns["StorageConditionName"];
                this.columnFarmGroupLevel2 = base.Columns["FarmGroupLevel2"];
                this.columnUnitName = base.Columns["UnitName"];
                this.columnSubstanceName = base.Columns["SubstanceName"];
                this.columnDateLastModif = base.Columns["DateLastModif"];
                this.columnNote = base.Columns["Note"];
                this.columnOldName = base.Columns["OldName"];
                this.columnOldKod = base.Columns["OldKod"];
                this.columnOldKol = base.Columns["OldKol"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnID = new System.Data.DataColumn("ID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnName = new System.Data.DataColumn("Name", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnName);
                this.columnSmallName = new System.Data.DataColumn("SmallName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSmallName);
                this.columnPriceManufact = new System.Data.DataColumn("PriceManufact", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPriceManufact);
                this.columnUnitRef = new System.Data.DataColumn("UnitRef", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitRef);
                this.columnPackingRef = new System.Data.DataColumn("PackingRef", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackingRef);
                this.columnStorageConditionRef = new System.Data.DataColumn("StorageConditionRef", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageConditionRef);
                this.columnSubstanceRef = new System.Data.DataColumn("SubstanceRef", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubstanceRef);
                this.columnFarmGrouplevel2Ref = new System.Data.DataColumn("FarmGrouplevel2Ref", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFarmGrouplevel2Ref);
                this.columnIsRecept = new System.Data.DataColumn("IsRecept", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsRecept);
                this.columnIsOneRecept = new System.Data.DataColumn("IsOneRecept", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsOneRecept);
                this.columnIsHide = new System.Data.DataColumn("IsHide", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsHide);
                this.columnMinDivisor = new System.Data.DataColumn("MinDivisor", typeof(short), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnMinDivisor);
                this.columnIsNDS = new System.Data.DataColumn("IsNDS", typeof(bool), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIsNDS);
                this.columnAuthorCreate = new System.Data.DataColumn("AuthorCreate", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuthorCreate);
                this.columnAuthorLastModif = new System.Data.DataColumn("AuthorLastModif", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnAuthorLastModif);
                this.columnDateCreate = new System.Data.DataColumn("DateCreate", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateCreate);
                this.columnRowVersion = new System.Data.DataColumn("RowVersion", typeof(byte[]), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnRowVersion);
                this.columnFarmGroupName = new System.Data.DataColumn("FarmGroupName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFarmGroupName);
                this.columnPackingName = new System.Data.DataColumn("PackingName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPackingName);
                this.columnStorageConditionName = new System.Data.DataColumn("StorageConditionName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnStorageConditionName);
                this.columnFarmGroupLevel2 = new System.Data.DataColumn("FarmGroupLevel2", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnFarmGroupLevel2);
                this.columnUnitName = new System.Data.DataColumn("UnitName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnUnitName);
                this.columnSubstanceName = new System.Data.DataColumn("SubstanceName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnSubstanceName);
                this.columnDateLastModif = new System.Data.DataColumn("DateLastModif", typeof(System.DateTime), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDateLastModif);
                this.columnNote = new System.Data.DataColumn("Note", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnNote);
                this.columnOldName = new System.Data.DataColumn("OldName", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOldName);
                this.columnOldKod = new System.Data.DataColumn("OldKod", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOldKod);
                this.columnOldKol = new System.Data.DataColumn("OldKol", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnOldKol);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
                this.columnName.AllowDBNull = false;
                this.columnName.MaxLength = 255;
                this.columnSmallName.AllowDBNull = false;
                this.columnSmallName.MaxLength = 25;
                this.columnPriceManufact.AllowDBNull = false;
                this.columnUnitRef.AllowDBNull = false;
                this.columnPackingRef.AllowDBNull = false;
                this.columnStorageConditionRef.AllowDBNull = false;
                this.columnSubstanceRef.AllowDBNull = false;
                this.columnFarmGrouplevel2Ref.AllowDBNull = false;
                this.columnIsRecept.AllowDBNull = false;
                this.columnIsOneRecept.AllowDBNull = false;
                this.columnIsHide.AllowDBNull = false;
                this.columnMinDivisor.AllowDBNull = false;
                this.columnIsNDS.AllowDBNull = false;
                this.columnAuthorCreate.AllowDBNull = false;
                this.columnAuthorCreate.MaxLength = 50;
                this.columnAuthorLastModif.AllowDBNull = false;
                this.columnAuthorLastModif.MaxLength = 50;
                this.columnDateCreate.AllowDBNull = false;
                this.columnRowVersion.ReadOnly = true;
                this.columnFarmGroupName.AllowDBNull = false;
                this.columnFarmGroupName.MaxLength = 50;
                this.columnPackingName.AllowDBNull = false;
                this.columnPackingName.MaxLength = 50;
                this.columnStorageConditionName.AllowDBNull = false;
                this.columnStorageConditionName.MaxLength = 50;
                this.columnFarmGroupLevel2.AllowDBNull = false;
                this.columnFarmGroupLevel2.MaxLength = 50;
                this.columnUnitName.AllowDBNull = false;
                this.columnUnitName.MaxLength = 10;
                this.columnSubstanceName.AllowDBNull = false;
                this.columnSubstanceName.MaxLength = 50;
                this.columnDateLastModif.AllowDBNull = false;
                this.columnNote.AllowDBNull = false;
                this.columnNote.MaxLength = 50;
                this.columnOldName.AllowDBNull = false;
                this.columnOldName.MaxLength = 100;
                this.columnOldKod.AllowDBNull = false;
                this.columnOldKol.AllowDBNull = false;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductSelectByIdRow NewProductSelectByIdRow() {
                return ((ProductSelectByIdRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new ProductSelectByIdRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(ProductSelectByIdRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.ProductSelectByIdRowChanged != null)) {
                    this.ProductSelectByIdRowChanged(this, new ProductSelectByIdRowChangeEvent(((ProductSelectByIdRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.ProductSelectByIdRowChanging != null)) {
                    this.ProductSelectByIdRowChanging(this, new ProductSelectByIdRowChangeEvent(((ProductSelectByIdRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.ProductSelectByIdRowDeleted != null)) {
                    this.ProductSelectByIdRowDeleted(this, new ProductSelectByIdRowChangeEvent(((ProductSelectByIdRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.ProductSelectByIdRowDeleting != null)) {
                    this.ProductSelectByIdRowDeleting(this, new ProductSelectByIdRowChangeEvent(((ProductSelectByIdRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveProductSelectByIdRow(ProductSelectByIdRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                RetailTradeClDataSet ds = new RetailTradeClDataSet();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "ProductSelectByIdDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ProductRemainsByDateRow : System.Data.DataRow {
            
            private ProductRemainsByDateDataTable tableProductRemainsByDate;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProductRemainsByDateRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProductRemainsByDate = ((ProductRemainsByDateDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Series {
                get {
                    try {
                        return ((string)(this[this.tableProductRemainsByDate.SeriesColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Series\' in table \'ProductRemainsByDate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductRemainsByDate.SeriesColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime UseByDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableProductRemainsByDate.UseByDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'UseByDate\' in table \'ProductRemainsByDate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductRemainsByDate.UseByDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    try {
                        return ((int)(this[this.tableProductRemainsByDate.IDColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ID\' in table \'ProductRemainsByDate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductRemainsByDate.IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal StartRem {
                get {
                    try {
                        return ((decimal)(this[this.tableProductRemainsByDate.StartRemColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'StartRem\' in table \'ProductRemainsByDate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductRemainsByDate.StartRemColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DocDate {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableProductRemainsByDate.DocDateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'DocDate\' in table \'ProductRemainsByDate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductRemainsByDate.DocDateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int Num {
                get {
                    try {
                        return ((int)(this[this.tableProductRemainsByDate.NumColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Num\' in table \'ProductRemainsByDate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductRemainsByDate.NumColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int NumCheck {
                get {
                    try {
                        return ((int)(this[this.tableProductRemainsByDate.NumCheckColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'NumCheck\' in table \'ProductRemainsByDate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductRemainsByDate.NumCheckColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string ManufacturerName {
                get {
                    try {
                        return ((string)(this[this.tableProductRemainsByDate.ManufacturerNameColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'ManufacturerName\' in table \'ProductRemainsByDate\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableProductRemainsByDate.ManufacturerNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QuantityReceipt {
                get {
                    try {
                        return ((decimal)(this[this.tableProductRemainsByDate.QuantityReceiptColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'QuantityReceipt\' in table \'ProductRemainsByDate\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableProductRemainsByDate.QuantityReceiptColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal QuantityInvoice {
                get {
                    try {
                        return ((decimal)(this[this.tableProductRemainsByDate.QuantityInvoiceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'QuantityInvoice\' in table \'ProductRemainsByDate\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableProductRemainsByDate.QuantityInvoiceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal EndRem {
                get {
                    try {
                        return ((decimal)(this[this.tableProductRemainsByDate.EndRemColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'EndRem\' in table \'ProductRemainsByDate\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductRemainsByDate.EndRemColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsSeriesNull() {
                return this.IsNull(this.tableProductRemainsByDate.SeriesColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetSeriesNull() {
                this[this.tableProductRemainsByDate.SeriesColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsUseByDateNull() {
                return this.IsNull(this.tableProductRemainsByDate.UseByDateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetUseByDateNull() {
                this[this.tableProductRemainsByDate.UseByDateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIDNull() {
                return this.IsNull(this.tableProductRemainsByDate.IDColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIDNull() {
                this[this.tableProductRemainsByDate.IDColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsStartRemNull() {
                return this.IsNull(this.tableProductRemainsByDate.StartRemColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetStartRemNull() {
                this[this.tableProductRemainsByDate.StartRemColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDocDateNull() {
                return this.IsNull(this.tableProductRemainsByDate.DocDateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDocDateNull() {
                this[this.tableProductRemainsByDate.DocDateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumNull() {
                return this.IsNull(this.tableProductRemainsByDate.NumColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumNull() {
                this[this.tableProductRemainsByDate.NumColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNumCheckNull() {
                return this.IsNull(this.tableProductRemainsByDate.NumCheckColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetNumCheckNull() {
                this[this.tableProductRemainsByDate.NumCheckColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsManufacturerNameNull() {
                return this.IsNull(this.tableProductRemainsByDate.ManufacturerNameColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetManufacturerNameNull() {
                this[this.tableProductRemainsByDate.ManufacturerNameColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityReceiptNull() {
                return this.IsNull(this.tableProductRemainsByDate.QuantityReceiptColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityReceiptNull() {
                this[this.tableProductRemainsByDate.QuantityReceiptColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsQuantityInvoiceNull() {
                return this.IsNull(this.tableProductRemainsByDate.QuantityInvoiceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetQuantityInvoiceNull() {
                this[this.tableProductRemainsByDate.QuantityInvoiceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsEndRemNull() {
                return this.IsNull(this.tableProductRemainsByDate.EndRemColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetEndRemNull() {
                this[this.tableProductRemainsByDate.EndRemColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class ProductSelectByIdRow : System.Data.DataRow {
            
            private ProductSelectByIdDataTable tableProductSelectById;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal ProductSelectByIdRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableProductSelectById = ((ProductSelectByIdDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableProductSelectById.IDColumn]));
                }
                set {
                    this[this.tableProductSelectById.IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Name {
                get {
                    return ((string)(this[this.tableProductSelectById.NameColumn]));
                }
                set {
                    this[this.tableProductSelectById.NameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SmallName {
                get {
                    return ((string)(this[this.tableProductSelectById.SmallNameColumn]));
                }
                set {
                    this[this.tableProductSelectById.SmallNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal PriceManufact {
                get {
                    return ((decimal)(this[this.tableProductSelectById.PriceManufactColumn]));
                }
                set {
                    this[this.tableProductSelectById.PriceManufactColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int UnitRef {
                get {
                    return ((int)(this[this.tableProductSelectById.UnitRefColumn]));
                }
                set {
                    this[this.tableProductSelectById.UnitRefColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int PackingRef {
                get {
                    return ((int)(this[this.tableProductSelectById.PackingRefColumn]));
                }
                set {
                    this[this.tableProductSelectById.PackingRefColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int StorageConditionRef {
                get {
                    return ((int)(this[this.tableProductSelectById.StorageConditionRefColumn]));
                }
                set {
                    this[this.tableProductSelectById.StorageConditionRefColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int SubstanceRef {
                get {
                    return ((int)(this[this.tableProductSelectById.SubstanceRefColumn]));
                }
                set {
                    this[this.tableProductSelectById.SubstanceRefColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int FarmGrouplevel2Ref {
                get {
                    return ((int)(this[this.tableProductSelectById.FarmGrouplevel2RefColumn]));
                }
                set {
                    this[this.tableProductSelectById.FarmGrouplevel2RefColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRecept {
                get {
                    return ((bool)(this[this.tableProductSelectById.IsReceptColumn]));
                }
                set {
                    this[this.tableProductSelectById.IsReceptColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsOneRecept {
                get {
                    return ((bool)(this[this.tableProductSelectById.IsOneReceptColumn]));
                }
                set {
                    this[this.tableProductSelectById.IsOneReceptColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHide {
                get {
                    return ((bool)(this[this.tableProductSelectById.IsHideColumn]));
                }
                set {
                    this[this.tableProductSelectById.IsHideColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short MinDivisor {
                get {
                    return ((short)(this[this.tableProductSelectById.MinDivisorColumn]));
                }
                set {
                    this[this.tableProductSelectById.MinDivisorColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsNDS {
                get {
                    return ((bool)(this[this.tableProductSelectById.IsNDSColumn]));
                }
                set {
                    this[this.tableProductSelectById.IsNDSColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AuthorCreate {
                get {
                    return ((string)(this[this.tableProductSelectById.AuthorCreateColumn]));
                }
                set {
                    this[this.tableProductSelectById.AuthorCreateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string AuthorLastModif {
                get {
                    return ((string)(this[this.tableProductSelectById.AuthorLastModifColumn]));
                }
                set {
                    this[this.tableProductSelectById.AuthorLastModifColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateCreate {
                get {
                    return ((System.DateTime)(this[this.tableProductSelectById.DateCreateColumn]));
                }
                set {
                    this[this.tableProductSelectById.DateCreateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] RowVersion {
                get {
                    try {
                        return ((byte[])(this[this.tableProductSelectById.RowVersionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'RowVersion\' in table \'ProductSelectById\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableProductSelectById.RowVersionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FarmGroupName {
                get {
                    return ((string)(this[this.tableProductSelectById.FarmGroupNameColumn]));
                }
                set {
                    this[this.tableProductSelectById.FarmGroupNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string PackingName {
                get {
                    return ((string)(this[this.tableProductSelectById.PackingNameColumn]));
                }
                set {
                    this[this.tableProductSelectById.PackingNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string StorageConditionName {
                get {
                    return ((string)(this[this.tableProductSelectById.StorageConditionNameColumn]));
                }
                set {
                    this[this.tableProductSelectById.StorageConditionNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string FarmGroupLevel2 {
                get {
                    return ((string)(this[this.tableProductSelectById.FarmGroupLevel2Column]));
                }
                set {
                    this[this.tableProductSelectById.FarmGroupLevel2Column] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string UnitName {
                get {
                    return ((string)(this[this.tableProductSelectById.UnitNameColumn]));
                }
                set {
                    this[this.tableProductSelectById.UnitNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string SubstanceName {
                get {
                    return ((string)(this[this.tableProductSelectById.SubstanceNameColumn]));
                }
                set {
                    this[this.tableProductSelectById.SubstanceNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime DateLastModif {
                get {
                    return ((System.DateTime)(this[this.tableProductSelectById.DateLastModifColumn]));
                }
                set {
                    this[this.tableProductSelectById.DateLastModifColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Note {
                get {
                    return ((string)(this[this.tableProductSelectById.NoteColumn]));
                }
                set {
                    this[this.tableProductSelectById.NoteColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string OldName {
                get {
                    return ((string)(this[this.tableProductSelectById.OldNameColumn]));
                }
                set {
                    this[this.tableProductSelectById.OldNameColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OldKod {
                get {
                    return ((int)(this[this.tableProductSelectById.OldKodColumn]));
                }
                set {
                    this[this.tableProductSelectById.OldKodColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int OldKol {
                get {
                    return ((int)(this[this.tableProductSelectById.OldKolColumn]));
                }
                set {
                    this[this.tableProductSelectById.OldKolColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsRowVersionNull() {
                return this.IsNull(this.tableProductSelectById.RowVersionColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetRowVersionNull() {
                this[this.tableProductSelectById.RowVersionColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ProductRemainsByDateRowChangeEvent : System.EventArgs {
            
            private ProductRemainsByDateRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductRemainsByDateRowChangeEvent(ProductRemainsByDateRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductRemainsByDateRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class ProductSelectByIdRowChangeEvent : System.EventArgs {
            
            private ProductSelectByIdRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductSelectByIdRowChangeEvent(ProductSelectByIdRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public ProductSelectByIdRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace RetailTradeClient.RetailTradeClDataSetTableAdapters {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ProductRemainsByDateTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProductRemainsByDateTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ProductRemainsByDate";
            tableMapping.ColumnMappings.Add("Series", "Series");
            tableMapping.ColumnMappings.Add("UseByDate", "UseByDate");
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("StartRem", "StartRem");
            tableMapping.ColumnMappings.Add("DocDate", "DocDate");
            tableMapping.ColumnMappings.Add("Num", "Num");
            tableMapping.ColumnMappings.Add("NumCheck", "NumCheck");
            tableMapping.ColumnMappings.Add("ManufacturerName", "ManufacturerName");
            tableMapping.ColumnMappings.Add("QuantityReceipt", "QuantityReceipt");
            tableMapping.ColumnMappings.Add("QuantityInvoice", "QuantityInvoice");
            tableMapping.ColumnMappings.Add("EndRem", "EndRem");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::RetailTradeClient.Properties.Settings.Default.RetailTradeConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.ProductRemainsByDate";
            this._commandCollection[0].CommandType = System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@StartDate", System.Data.SqlDbType.DateTime, 8, System.Data.ParameterDirection.Input, 23, 3, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@EndDate", System.Data.SqlDbType.DateTime, 8, System.Data.ParameterDirection.Input, 23, 3, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@productRef", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(RetailTradeClDataSet.ProductRemainsByDateDataTable dataTable, System.Nullable<System.DateTime> StartDate, System.Nullable<System.DateTime> EndDate, System.Nullable<int> productRef) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((StartDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(StartDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((EndDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(EndDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((productRef.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(productRef.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual RetailTradeClDataSet.ProductRemainsByDateDataTable GetData(System.Nullable<System.DateTime> StartDate, System.Nullable<System.DateTime> EndDate, System.Nullable<int> productRef) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((StartDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((System.DateTime)(StartDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((EndDate.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((System.DateTime)(EndDate.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = System.DBNull.Value;
            }
            if ((productRef.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(productRef.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = System.DBNull.Value;
            }
            RetailTradeClDataSet.ProductRemainsByDateDataTable dataTable = new RetailTradeClDataSet.ProductRemainsByDateDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.ComponentModel.DataObjectAttribute(true)]
    [System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class ProductSelectByIdTableAdapter : System.ComponentModel.Component {
        
        private System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private System.Data.SqlClient.SqlConnection _connection;
        
        private System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ProductSelectByIdTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitAdapter() {
            this._adapter = new System.Data.SqlClient.SqlDataAdapter();
            System.Data.Common.DataTableMapping tableMapping = new System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "ProductSelectById";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Name", "Name");
            tableMapping.ColumnMappings.Add("SmallName", "SmallName");
            tableMapping.ColumnMappings.Add("PriceManufact", "PriceManufact");
            tableMapping.ColumnMappings.Add("UnitRef", "UnitRef");
            tableMapping.ColumnMappings.Add("PackingRef", "PackingRef");
            tableMapping.ColumnMappings.Add("StorageConditionRef", "StorageConditionRef");
            tableMapping.ColumnMappings.Add("SubstanceRef", "SubstanceRef");
            tableMapping.ColumnMappings.Add("FarmGrouplevel2Ref", "FarmGrouplevel2Ref");
            tableMapping.ColumnMappings.Add("IsRecept", "IsRecept");
            tableMapping.ColumnMappings.Add("IsOneRecept", "IsOneRecept");
            tableMapping.ColumnMappings.Add("IsHide", "IsHide");
            tableMapping.ColumnMappings.Add("MinDivisor", "MinDivisor");
            tableMapping.ColumnMappings.Add("IsNDS", "IsNDS");
            tableMapping.ColumnMappings.Add("AuthorCreate", "AuthorCreate");
            tableMapping.ColumnMappings.Add("AuthorLastModif", "AuthorLastModif");
            tableMapping.ColumnMappings.Add("DateCreate", "DateCreate");
            tableMapping.ColumnMappings.Add("RowVersion", "RowVersion");
            tableMapping.ColumnMappings.Add("FarmGroupName", "FarmGroupName");
            tableMapping.ColumnMappings.Add("PackingName", "PackingName");
            tableMapping.ColumnMappings.Add("StorageConditionName", "StorageConditionName");
            tableMapping.ColumnMappings.Add("FarmGroupLevel2", "FarmGroupLevel2");
            tableMapping.ColumnMappings.Add("UnitName", "UnitName");
            tableMapping.ColumnMappings.Add("SubstanceName", "SubstanceName");
            tableMapping.ColumnMappings.Add("DateLastModif", "DateLastModif");
            tableMapping.ColumnMappings.Add("Note", "Note");
            tableMapping.ColumnMappings.Add("OldName", "OldName");
            tableMapping.ColumnMappings.Add("OldKod", "OldKod");
            tableMapping.ColumnMappings.Add("OldKol", "OldKol");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitConnection() {
            this._connection = new System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = global::RetailTradeClient.Properties.Settings.Default.RetailTradeConnectionString;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitCommandCollection() {
            this._commandCollection = new System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.ProductSelectById";
            this._commandCollection[0].CommandType = System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@RETURN_VALUE", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.ReturnValue, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new System.Data.SqlClient.SqlParameter("@ProductRef", System.Data.SqlDbType.Int, 4, System.Data.ParameterDirection.Input, 10, 0, null, System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(RetailTradeClDataSet.ProductSelectByIdDataTable dataTable, System.Nullable<int> ProductRef) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ProductRef.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(ProductRef.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [System.ComponentModel.DataObjectMethodAttribute(System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual RetailTradeClDataSet.ProductSelectByIdDataTable GetData(System.Nullable<int> ProductRef) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((ProductRef.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(ProductRef.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = System.DBNull.Value;
            }
            RetailTradeClDataSet.ProductSelectByIdDataTable dataTable = new RetailTradeClDataSet.ProductSelectByIdDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
}

#pragma warning restore 1591